@model QLSTK_MoneyLover.Models.Deposit

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutBlankAd.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.Acronym, "Mã số :", htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Acronym, new { htmlAttributes = new { @class = "form-control acronym", maxstr = "10", id = "acronym" } })
                    @Html.ValidationMessageFor(model => model.Acronym, "", new { @class = "text-danger", id = "erracronym" })
                </div>
            </div>

            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.PassBookId, "Sổ tiết kiệm", htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.DropDownList("PassBookId", null, htmlAttributes: new { @class = "form-control", id = "pbid" })
                    @Html.ValidationMessageFor(model => model.PassBookId, "", new { @class = "text-danger", id = "errpbid" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.DepositDate, "Ngày gởi :", htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.DepositDate, new { htmlAttributes = new { @class = "form-control", type = "date", id = "depdate" } })
                    @Html.ValidationMessageFor(model => model.DepositDate, "", new { @class = "text-danger", id = "errdepdate" })
                </div>
            </div>

            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.Amount, "Số tiền gởi :", htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control moneyinput", maxstr = "12", id = "amount" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger", id = "erramount" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12" style="margin-top: 1rem;">
                <center><input type="button" id="btnSave" value="Create" class="btn btn-input" /></center>
            </div>
        </div>
    </div>
}

<script>
    var tzoffset = (new Date()).getTimezoneOffset() * 60000;
    var today = (new Date(Date.now() - tzoffset)).toISOString().slice(0, 10);
    $("#depdate").val(today);
    $(document).ready(function () {
        //debugger;
        $("#btnSave").click(function () {
            //debugger;
            var formData = new FormData();

            formData.append("Acronym", $("#acronym").val());
            formData.append("PassBookId", $("#pbid").val());
            formData.append("DepositDate", $("#depdate").val());
            formData.append("Amount", $("#amount").val());

            $.ajax({
                type: "POST",
                url: "@Url.Action("Create","Deposits")",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (res) {
                    //debugger;
                    console.log(JSON.stringify(res));
                    $('#erracronym').text(" ");
                    $('#errpbid').text(" ");
                    $('#errdepdate').text(" ");
                    $('#erramount').text(" ");
                    if (res.msgacronym != null) {
                        $('#erracronym').text(res.msgacronym);
                    }
                    if (res.msgpbid != null) {
                        $('#errpbid').text(res.msgpbid);
                    }
                    if (res.msgdepdate != null) {
                        $('#errdepdate').text(res.msgdepdate);
                    }
                    if (res.msgamount != null) {
                        $('#erramount').text(res.msgamount);
                    }
                    if (res.msg == "completed") {
                        $("#largeModal").modal("hide");
                        alert('Thêm thành công !');
                        //window.location.reload(true);
                        window.location.href = ("@Url.Action("Details", "Deposits")/" + res.depid)
                    }
                },
                error: function (res) {
                    //debugger;
                    console.log(JSON.stringify(res));
                    $("#largeModal").modal("hide");
                    alert('error');
                    //window.location.href = ("@Url.Action("Details","Sanhs")/" + data.MaSanh);
                }
            })
        })
    })
</script>